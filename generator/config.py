import os
from dotenv import load_dotenv
import logging

# Настройка логирования
logger = logging.getLogger(__name__)

# Загрузка переменных окружения
load_dotenv()

# Получение API-ключа Google Maps
GOOGLE_MAPS_API_KEY = os.environ.get("GOOGLE_MAPS_API_KEY")
if not GOOGLE_MAPS_API_KEY:
    logger.warning("GOOGLE_MAPS_API_KEY не установлен в переменных окружения. Некоторые функции будут недоступны.")

# Словарь локализации по странам, расширенный и проверенный список
COUNTRY_LOCALES = {
    # Европа
    'AT': 'de_AT',  # Австрия
    'BE': 'nl_BE',  # Бельгия
    'BG': 'bg_BG',  # Болгария
    'CH': 'de_CH',  # Швейцария
    'CY': 'el_CY',  # Кипр
    'CZ': 'cs_CZ',  # Чехия
    'DE': 'de_DE',  # Германия
    'DK': 'da_DK',  # Дания
    'EE': 'et_EE',  # Эстония
    'ES': 'es_ES',  # Испания
    'FI': 'fi_FI',  # Финляндия
    'FR': 'fr_FR',  # Франция
    'GB': 'en_GB',  # Великобритания
    'GR': 'el_GR',  # Греция
    'HR': 'hr_HR',  # Хорватия
    'HU': 'hu_HU',  # Венгрия
    'IE': 'en_IE',  # Ирландия
    'IT': 'it_IT',  # Италия
    'LT': 'lt_LT',  # Литва
    'LU': 'fr_LU',  # Люксембург
    'LV': 'lv_LV',  # Латвия
    'MT': 'mt_MT',  # Мальта (может не поддерживаться)
    'NL': 'nl_NL',  # Нидерланды
    'NO': 'no_NO',  # Норвегия
    'PL': 'pl_PL',  # Польша
    'PT': 'pt_PT',  # Португалия
    'RO': 'ro_RO',  # Румыния
    'SE': 'sv_SE',  # Швеция
    'SI': 'sl_SI',  # Словения
    'SK': 'sk_SK',  # Словакия

    # Азия
    'AE': 'ar_AE',  # ОАЭ
    'CN': 'zh_CN',  # Китай
    'HK': 'zh_HK',  # Гонконг
    'ID': 'id_ID',  # Индонезия
    'IL': 'he_IL',  # Израиль
    'IN': 'hi_IN',  # Индия
    'JP': 'ja_JP',  # Япония
    'KR': 'ko_KR',  # Южная Корея
    'MY': 'ms_MY',  # Малайзия (может не поддерживаться)
    'PH': 'fil_PH',  # Филиппины (может не поддерживаться)
    'SA': 'ar_SA',  # Саудовская Аравия
    'SG': 'en_SG',  # Сингапур (используем en_GB если не поддерживается)
    'TH': 'th_TH',  # Таиланд
    'TR': 'tr_TR',  # Турция
    'TW': 'zh_TW',  # Тайвань
    'VN': 'vi_VN',  # Вьетнам

    # Америка
    'AR': 'es_AR',  # Аргентина
    'BR': 'pt_BR',  # Бразилия
    'CA': 'en_CA',  # Канада
    'CL': 'es_CL',  # Чили
    'CO': 'es_CO',  # Колумбия
    'MX': 'es_MX',  # Мексика
    'PE': 'es_PE',  # Перу
    'US': 'en_US',  # США

    # Океания
    'AU': 'en_AU',  # Австралия
    'NZ': 'en_NZ',  # Новая Зеландия

    # Африка
    'EG': 'ar_EG',  # Египет
    'ZA': 'en_US',  # ЮАР (используем en_US если en_ZA не поддерживается)

    # Бывший СССР
    'BY': 'be_BY',  # Беларусь (может не поддерживаться)
    'GE': 'ka_GE',  # Грузия
    'KZ': 'kk_KZ',  # Казахстан (может не поддерживаться)
    'RU': 'ru_RU',  # Россия
    'UA': 'uk_UA',  # Украина
}

# Попытка импорта pycountry для получения корректных названий стран
try:
    import pycountry

    # Создаем словарь с корректными названиями стран
    COUNTRY_NAMES = {country.alpha_2: country.name for country in pycountry.countries}
    logger.info("Используются данные о странах из библиотеки pycountry")
except ImportError:
    logger.warning("Библиотека pycountry не установлена. Используются предопределенные данные о странах.")
    # Предопределенные названия стран (на случай, если pycountry не установлен)
    COUNTRY_NAMES = {
        'AT': 'Austria',
        'BE': 'Belgium',
        'BG': 'Bulgaria',
        'CH': 'Switzerland',
        'CY': 'Cyprus',
        'CZ': 'Czech Republic',
        'DE': 'Germany',
        'DK': 'Denmark',
        'EE': 'Estonia',
        'ES': 'Spain',
        'FI': 'Finland',
        'FR': 'France',
        'GB': 'United Kingdom',
        'GR': 'Greece',
        'HR': 'Croatia',
        'HU': 'Hungary',
        'IE': 'Ireland',
        'IT': 'Italy',
        'LT': 'Lithuania',
        'LU': 'Luxembourg',
        'LV': 'Latvia',
        'MT': 'Malta',
        'NL': 'Netherlands',
        'NO': 'Norway',
        'PL': 'Poland',
        'PT': 'Portugal',
        'RO': 'Romania',
        'SE': 'Sweden',
        'SI': 'Slovenia',
        'SK': 'Slovakia',
        'AE': 'United Arab Emirates',
        'CN': 'China',
        'HK': 'Hong Kong',
        'ID': 'Indonesia',
        'IL': 'Israel',
        'IN': 'India',
        'JP': 'Japan',
        'KR': 'South Korea',
        'MY': 'Malaysia',
        'PH': 'Philippines',
        'SA': 'Saudi Arabia',
        'SG': 'Singapore',
        'TH': 'Thailand',
        'TR': 'Turkey',
        'TW': 'Taiwan',
        'VN': 'Vietnam',
        'AR': 'Argentina',
        'BR': 'Brazil',
        'CA': 'Canada',
        'CL': 'Chile',
        'CO': 'Colombia',
        'MX': 'Mexico',
        'PE': 'Peru',
        'US': 'United States',
        'AU': 'Australia',
        'NZ': 'New Zealand',
        'EG': 'Egypt',
        'ZA': 'South Africa',
        'BY': 'Belarus',
        'GE': 'Georgia',
        'KZ': 'Kazakhstan',
        'RU': 'Russian Federation',
        'UA': 'Ukraine',
    }

# Динамически создаем список координат городов для каждой страны
# Некоторые базовые координаты, остальные будут загружены из внешнего источника или API
CITY_COORDINATES = {
    'US': [
        '40.712776,-74.005974',  # New York
        '34.052235,-118.243683',  # Los Angeles
        '41.878113,-87.629799',  # Chicago
        '29.760427,-95.369804',  # Houston
        '33.748997,-84.387985',  # Atlanta
        '39.952583,-75.165222',  # Philadelphia
        '38.907192,-77.036873',  # Washington DC
        '42.360082,-71.058880',  # Boston
        '32.776665,-96.796989',  # Dallas
        '37.774929,-122.419418',  # San Francisco
    ],
    'GB': [
        '51.507351,-0.127758',  # London
        '53.483959,-2.244644',  # Manchester
        '55.953251,-3.188267',  # Edinburgh
        '52.486244,-1.890401',  # Birmingham
        '51.454513,-2.587910',  # Bristol
    ],
    'DE': [
        '52.520008,13.404954',  # Berlin
        '48.135124,11.581981',  # Munich
        '50.110924,8.682127',  # Frankfurt
        '53.551086,9.993682',  # Hamburg
        '51.227741,6.773456',  # Dusseldorf
    ],
    'FR': [
        '48.856613,2.352222',  # Paris
        '43.296482,5.369780',  # Marseille
        '45.764043,4.835659',  # Lyon
        '44.837789,-0.579180',  # Bordeaux
        '43.610769,3.876716',  # Montpellier
    ],
    # Блок с координатами городов для дополнительных стран
    # Добавить в CITY_COORDINATES в config.py

    # Европа
    'AT': [  # Австрия
        '48.208174,16.373819',  # Vienna
        '47.809490,13.055010',  # Salzburg
        '47.070714,15.439504',  # Graz
        '48.306940,14.285830',  # Linz
        '47.516231,14.550072',  # Sankt Pölten
    ],
    'BE': [  # Бельгия
        '50.850346,4.351721',  # Brussels
        '51.217896,4.402771',  # Antwerp
        '50.453857,3.952465',  # Mons
        '51.054342,3.717424',  # Ghent
        '50.632557,5.579666',  # Liège
    ],
    'BG': [  # Болгария
        '42.698334,23.319941',  # Sofia
        '42.144932,24.750204',  # Plovdiv
        '43.214050,27.914733',  # Varna
        '42.505493,27.468655',  # Burgas
        '43.856258,25.965576',  # Ruse
    ],
    'CH': [  # Швейцария
        '47.376888,8.541694',  # Zurich
        '46.204391,6.143158',  # Geneva
        '46.947974,7.447447',  # Bern
        '47.559601,7.588576',  # Basel
        '46.200013,6.149776',  # Lausanne
    ],
    'CY': [  # Кипр
        '35.169560,33.369539',  # Nicosia
        '34.784298,33.024475',  # Limassol
        '35.175512,33.361825',  # Larnaca
        '34.855169,32.367226',  # Paphos
        '35.344666,33.220031',  # Kyrenia
    ],
    'CZ': [  # Чехия
        '50.075538,14.437800',  # Prague
        '49.195061,16.606836',  # Brno
        '49.839683,18.289412',  # Ostrava
        '49.747261,13.374781',  # Pilsen
        '50.660365,14.051398',  # Ústí nad Labem
    ],
    'DK': [  # Дания
        '55.676098,12.568337',  # Copenhagen
        '56.156689,10.212490',  # Aarhus
        '55.403756,10.402370',  # Odense
        '57.048820,9.921747',  # Aalborg
        '55.708870,9.536154',  # Vejle
    ],
    'EE': [  # Эстония
        '59.436962,24.753574',  # Tallinn
        '58.378235,26.728493',  # Tartu
        '59.377485,28.190388',  # Narva
        '58.385501,24.495535',  # Pärnu
        '59.442165,24.753474',  # Tallinn (Старый город)
    ],
    'ES': [  # Испания
        '40.416775,-3.703790',  # Madrid
        '41.385064,2.173403',  # Barcelona
        '37.389092,-5.984459',  # Seville
        '39.469907,-0.376288',  # Valencia
        '37.174446,-3.598556',  # Granada
    ],
    'FI': [  # Финляндия
        '60.169857,24.938379',  # Helsinki
        '61.497752,23.760954',  # Tampere
        '60.451813,22.266630',  # Turku
        '65.012093,25.465077',  # Oulu
        '61.688431,27.273474',  # Mikkeli
    ],
    'GR': [  # Греция
        '37.983917,23.729360',  # Athens
        '40.640064,22.944419',  # Thessaloniki
        '35.337496,25.144896',  # Heraklion
        '38.246639,21.734573',  # Patras
        '39.074208,21.824312',  # Larissa
    ],
    'HR': [  # Хорватия
        '45.815399,15.966568',  # Zagreb
        '43.508133,16.440193',  # Split
        '45.332619,14.442176',  # Rijeka
        '44.868241,13.848062',  # Pula
        '42.650661,18.094424',  # Dubrovnik
    ],
    'HU': [  # Венгрия
        '47.497912,19.040235',  # Budapest
        '47.687778,17.637747',  # Győr
        '46.253013,20.141424',  # Szeged
        '46.077467,18.228001',  # Pécs
        '47.531399,21.627394',  # Debrecen
    ],
    'IE': [  # Ирландия
        '53.349805,-6.260310',  # Dublin
        '51.898113,-8.475524',  # Cork
        '53.274193,-9.049073',  # Galway
        '52.668020,-8.630498',  # Limerick
        '54.597285,-5.930120',  # Belfast
    ],
    'IT': [  # Италия
        '41.902782,12.496366',  # Rome
        '45.465422,9.185924',  # Milan
        '43.771033,11.248001',  # Florence
        '40.851775,14.268124',  # Naples
        '37.502525,15.087269',  # Catania
    ],
    'LT': [  # Литва
        '54.687157,25.279652',  # Vilnius
        '54.896870,23.886105',  # Kaunas
        '55.703297,21.144279',  # Klaipėda
        '55.981759,22.241686',  # Siauliai
        '54.396972,24.044408',  # Alytus
    ],
    'LU': [  # Люксембург
        '49.611621,6.131935',  # Luxembourg City
        '49.495104,5.980816',  # Esch-sur-Alzette
        '49.865479,6.152743',  # Ettelbrück
        '49.525923,6.086511',  # Dudelange
        '49.676975,6.410055',  # Echternach
    ],
    'LV': [  # Латвия
        '56.949649,24.105186',  # Riga
        '56.500870,21.010777',  # Liepāja
        '57.241699,26.646635',  # Valmiera
        '55.878567,26.531572',  # Daugavpils
        '56.411741,24.193916',  # Jelgava
    ],
    'MT': [  # Мальта
        '35.899168,14.514258',  # Valletta
        '35.857679,14.565629',  # Sliema
        '35.946358,14.380488',  # Mdina
        '35.816667,14.533333',  # Birkirkara
        '35.836667,14.583333',  # St. Julian's
    ],
    'NL': [  # Нидерланды
        '52.370216,4.895168',  # Amsterdam
        '51.924420,4.477733',  # Rotterdam
        '52.090737,5.121420',  # Utrecht
        '52.157756,4.485774',  # Leiden
        '51.555652,5.091303',  # Breda
    ],
    'NO': [  # Норвегия
        '59.913868,10.752245',  # Oslo
        '60.391262,5.322054',  # Bergen
        '63.430485,10.395049',  # Trondheim
        '69.649208,18.955324',  # Tromsø
        '58.969975,5.733107',  # Stavanger
    ],
    'PL': [  # Польша
        '52.229676,21.012229',  # Warsaw
        '50.064650,19.944980',  # Krakow
        '51.107883,17.038538',  # Wroclaw
        '53.428543,14.552812',  # Szczecin
        '54.352025,18.646638',  # Gdansk
    ],
    'PT': [  # Португалия
        '38.722252,-9.139337',  # Lisbon
        '41.157944,-8.629105',  # Porto
        '37.019356,-7.930440',  # Faro
        '38.571431,-7.913095',  # Évora
        '33.040981,-16.327744',  # Funchal (Madeira)
    ],
    'RO': [  # Румыния
        '44.426767,26.102538',  # Bucharest
        '45.759722,21.230000',  # Timișoara
        '46.770439,23.591423',  # Cluj-Napoca
        '47.134895,27.575310',  # Iași
        '44.439663,26.096306',  # Brașov
    ],
    'SE': [  # Швеция
        '59.329323,18.068581',  # Stockholm
        '57.708870,11.974560',  # Gothenburg
        '55.604980,13.003822',  # Malmö
        '59.858562,17.638927',  # Uppsala
        '58.410807,15.621373',  # Linköping
    ],
    'SI': [  # Словения
        '46.056946,14.505751',  # Ljubljana
        '46.562858,15.651426',  # Maribor
        '45.548060,13.730109',  # Koper
        '46.239789,15.267801',  # Celje
        '46.361504,14.082520',  # Kranj
    ],
    'SK': [  # Словакия
        '48.148596,17.107748',  # Bratislava
        '48.729104,21.258139',  # Košice
        '48.308460,18.093948',  # Nitra
        '48.754994,19.151580',  # Banská Bystrica
        '49.223748,18.739424',  # Žilina
    ],

    # Азия
    'AE': [  # ОАЭ
        '25.204849,55.270783',  # Dubai
        '24.466667,54.366669',  # Abu Dhabi
        '25.310000,55.470000',  # Sharjah
        '25.800000,55.983333',  # Ras Al Khaimah
        '24.178333,55.760556',  # Al Ain
    ],
    'CN': [  # Китай
        '39.904211,116.407395',  # Beijing
        '31.230416,121.473701',  # Shanghai
        '22.543096,114.057865',  # Shenzhen
        '30.593099,114.305393',  # Wuhan
        '23.129110,113.264385',  # Guangzhou
    ],
    'HK': [  # Гонконг
        '22.278901,114.174988',  # Central (Hong Kong Island)
        '22.311003,114.225400',  # Kowloon
        '22.308901,113.915349',  # Tung Chung
        '22.307760,114.029274',  # Lantau Island
        '22.386700,114.197403',  # Sha Tin
    ],
    'ID': [  # Индонезия
        '-6.208763,106.845599',  # Jakarta
        '-7.800000,110.400000',  # Yogyakarta
        '-8.650000,115.233333',  # Denpasar (Bali)
        '-2.990934,104.764149',  # Palembang
        '-5.135399,119.423790',  # Makassar
    ],
    'IL': [  # Израиль
        '32.085300,34.781768',  # Tel Aviv
        '31.768319,35.213710',  # Jerusalem
        '32.794046,34.989571',  # Haifa
        '31.252973,34.791462',  # Beersheba
        '29.557669,34.951925',  # Eilat
    ],
    'IN': [  # Индия
        '28.613939,77.209021',  # New Delhi
        '19.075984,72.877656',  # Mumbai
        '12.971599,77.594563',  # Bangalore
        '22.572646,88.363895',  # Kolkata
        '13.082680,80.270718',  # Chennai
    ],
    'JP': [  # Япония
        '35.689487,139.691711',  # Tokyo
        '34.693738,135.502165',  # Osaka
        '35.011635,135.768029',  # Kyoto
        '43.066666,141.350006',  # Sapporo
        '33.590355,130.401716',  # Fukuoka
    ],
    'KR': [  # Южная Корея
        '37.566535,126.977969',  # Seoul
        '35.179554,129.075642',  # Busan
        '35.871435,128.601445',  # Daegu
        '37.456257,126.705208',  # Incheon
        '35.160012,126.851349',  # Gwangju
    ],
    'MY': [  # Малайзия
        '3.139003,101.686855',  # Kuala Lumpur
        '5.416584,100.332390',  # Penang
        '1.557132,103.637802',  # Johor Bahru
        '3.812046,103.326448',  # Kuantan
        '2.301734,102.249512',  # Malacca
    ],
    'PH': [  # Филиппины
        '14.599512,120.984219',  # Manila
        '10.315699,123.885437',  # Cebu City
        '7.190708,125.455341',  # Davao City
        '14.583333,121.000000',  # Quezon City
        '15.485917,120.966093',  # Angeles City
    ],
    'SA': [  # Саудовская Аравия
        '24.713552,46.675296',  # Riyadh
        '21.285407,39.237551',  # Jeddah
        '21.389082,39.857912',  # Mecca
        '24.470901,39.612236',  # Medina
        '26.393196,49.977228',  # Dammam
    ],
    'SG': [  # Сингапур
        '1.280094,103.850949',  # Central Business District
        '1.330002,103.851600',  # Orchard Road
        '1.312530,103.855416',  # Marina Bay
        '1.326047,103.816441',  # Bukit Timah
        '1.388366,103.744566',  # Jurong East
    ],
    'TH': [  # Таиланд
        '13.756331,100.501765',  # Bangkok
        '18.796143,98.979263',  # Chiang Mai
        '7.878978,98.398392',  # Phuket
        '12.929896,100.877374',  # Pattaya
        '13.361143,100.984673',  # Samut Prakan
    ],
    'TR': [  # Турция
        '41.008238,28.978359',  # Istanbul
        '39.933365,32.859741',  # Ankara
        '38.423734,27.142826',  # Izmir
        '36.896893,30.713323',  # Antalya
        '40.193298,29.074202',  # Bursa
    ],
    'TW': [  # Тайвань
        '25.032969,121.565418',  # Taipei
        '22.618539,120.301421',  # Kaohsiung
        '24.147735,120.673648',  # Taichung
        '23.037786,120.204319',  # Tainan
        '24.990195,121.311743',  # Taoyuan
    ],
    'VN': [  # Вьетнам
        '21.027764,105.834160',  # Hanoi
        '10.823099,106.629664',  # Ho Chi Minh City
        '16.047079,108.206230',  # Da Nang
        '10.340000,107.083000',  # Vung Tau
        '20.713001,106.990005',  # Hai Phong
    ],

    # Америка
    'AR': [  # Аргентина
        '-34.603684,-58.381559',  # Buenos Aires
        '-31.420083,-64.188776',  # Córdoba
        '-32.890183,-68.844562',  # Mendoza
        '-34.921230,-57.954532',  # La Plata
        '-31.623468,-60.690460',  # Santa Fe
    ],
    'BR': [  # Бразилия
        '-23.550520,-46.633309',  # São Paulo
        '-22.906847,-43.172896',  # Rio de Janeiro
        '-15.797929,-47.892166',  # Brasília
        '-19.924176,-43.937660',  # Belo Horizonte
        '-3.117034,-60.021692',  # Manaus
    ],
    'CA': [  # Канада
        '43.653226,-79.383184',  # Toronto
        '45.501690,-73.567253',  # Montreal
        '49.282729,-123.120738',  # Vancouver
        '51.048615,-114.070847',  # Calgary
        '53.544389,-113.490927',  # Edmonton
    ],
    'CL': [  # Чили
        '-33.447487,-70.673676',  # Santiago
        '-23.650000,-70.400000',  # Antofagasta
        '-33.036837,-71.620422',  # Valparaíso
        '-36.826969,-73.049557',  # Concepción
        '-53.163833,-70.905941',  # Punta Arenas
    ],
    'CO': [  # Колумбия
        '4.598056,-74.075833',  # Bogotá
        '6.244338,-75.573553',  # Medellín
        '3.451647,-76.532302',  # Cali
        '10.963889,-74.796389',  # Barranquilla
        '7.896296,-72.503750',  # Cúcuta
    ],
    'MX': [  # Мексика
        '19.432608,-99.133208',  # Mexico City
        '20.666155,-103.343813',  # Guadalajara
        '25.686613,-100.316116',  # Monterrey
        '21.161908,-86.851528',  # Cancún
        '19.046749,-98.204375',  # Puebla
    ],
    'PE': [  # Перу
        '-12.046373,-77.042754',  # Lima
        '-16.409046,-71.537451',  # Arequipa
        '-8.114167,-79.029722',  # Trujillo
        '-13.533116,-71.967479',  # Cusco
        '-6.776990,-79.844785',  # Chiclayo
    ],

    # Океания
    'AU': [  # Австралия
        '-33.868820,151.209296',  # Sydney
        '-37.813628,144.963058',  # Melbourne
        '-27.470125,153.023865',  # Brisbane
        '-31.950527,115.860457',  # Perth
        '-34.928499,138.600746',  # Adelaide
    ],
    'NZ': [  # Новая Зеландия
        '-36.848460,174.763332',  # Auckland
        '-41.290000,174.790000',  # Wellington
        '-43.532054,172.636224',  # Christchurch
        '-45.878760,170.502798',  # Dunedin
        '-46.413187,168.353773',  # Invercargill
    ],

    # Африка
    'EG': [  # Египет
        '30.044420,31.235712',  # Cairo
        '31.205753,29.924526',  # Alexandria
        '31.417665,31.813985',  # Port Said
        '25.694350,32.639866',  # Luxor
        '27.257896,33.813267',  # Hurghada
    ],
    'ZA': [  # Южная Африка
        '-33.924870,18.424055',  # Cape Town
        '-26.204103,28.047305',  # Johannesburg
        '-29.857901,31.029799',  # Durban
        '-25.731340,28.218370',  # Pretoria
        '-33.963089,25.674401',  # Port Elizabeth
    ],

    # Бывший СССР
    'BY': [  # Беларусь
        '53.902496,27.561481',  # Minsk
        '55.194154,30.202517',  # Vitebsk
        '53.677834,23.829529',  # Grodno
        '53.138905,29.231520',  # Gomel
        '53.901600,30.342800',  # Mogilev
    ],
    'GE': [  # Грузия
        '41.715137,44.827095',  # Tbilisi
        '41.642500,41.636536',  # Batumi
        '42.268039,42.691253',  # Kutaisi
        '43.004242,41.022759',  # Sukhumi
        '41.499494,44.801388',  # Rustavi
    ],
    'KZ': [  # Казахстан
        '43.238949,76.889709',  # Almaty
        '51.160523,71.470356',  # Astana
        '44.855000,65.511300',  # Kyzylorda
        '51.132877,71.406746',  # Nur-Sultan (Astana)
        '49.948029,82.617815',  # Ust-Kamenogorsk
    ],
    'RU': [  # Россия
        '55.755826,37.617300',  # Moscow
        '59.939095,30.315868',  # Saint Petersburg
        '56.833333,60.583333',  # Yekaterinburg
        '55.018803,82.933952',  # Novosibirsk
        '56.326887,44.005986',  # Nizhny Novgorod
    ],
    'UA': [  # Украина
        '50.450001,30.523333',  # Kiev
        '49.839683,24.029717',  # Lviv
        '46.482526,30.723309',  # Odessa
        '48.015883,37.802850',  # Donetsk
        '49.988358,36.232845',  # Kharkiv
    ],
}


# Загрузка дополнительных координат городов из файла или API, если они не определены
def load_additional_coordinates():
    """
    Загружает дополнительные координаты городов для стран, которые не определены в CITY_COORDINATES.
    Для этого можно использовать внешний API или локальный файл.
    """
    global CITY_COORDINATES

    for country_code in COUNTRY_LOCALES.keys():
        if country_code not in CITY_COORDINATES or not CITY_COORDINATES[country_code]:
            # Если для страны нет координат, добавляем стандартные значения
            # В реальном приложении здесь можно использовать геокодирование или другой источник данных
            if country_code not in CITY_COORDINATES:
                CITY_COORDINATES[country_code] = []

            # Если мы не можем получить реальные координаты, используем стандартные значения
            if not CITY_COORDINATES[country_code]:
                logger.warning(
                    f"Для страны {country_code} не определены координаты городов. Используются стандартные значения.")
                # Добавляем фиктивные координаты (в реальном приложении заменить на настоящие)
                CITY_COORDINATES[country_code] = ['0.0,0.0']


# Загружаем дополнительные координаты
load_additional_coordinates()

# Настройки для радиусов поиска
DEFAULT_RADIUS = 30000  # 30 км
BORDER_RADIUS = 20000  # 20 км

# Создаем базовые данные о радиусах поиска
RADIUS_DATA = {}
for country_code in COUNTRY_LOCALES.keys():
    RADIUS_DATA[country_code] = {
        'default': DEFAULT_RADIUS,
        'border': BORDER_RADIUS,
        'border_cities': []  # Будет заполнено при необходимости
    }

# Настройки для генерации данных пользователей
USER_GEN_CONFIG = {
    'min_age': 25,
    'max_age': 45,
    'proxy_port_range': (100, 299),  # Расширенный диапазон портов
    'password_length': 18,  # Увеличенная длина пароля
    'default_email_domains': [
        'gmail.com', 'outlook.com', 'yahoo.com', 'hotmail.com',
        'icloud.com', 'protonmail.com', 'mail.com', 'aol.com'
    ],
}

# Настройки для Google Maps API
GMAPS_CONFIG = {
    'max_retries': 5,
    'retry_base_delay': 2,  # секунды
    'language': 'en',
    'place_types': ['street_address', 'premise', 'subpremise'],
    'required_components': ['street_number', 'route', 'postal_code', 'locality'],
}

# Добавляем информацию о телефонных кодах стран
COUNTRY_PHONE_CODES = {
    'US': '+1',  # США
    'CA': '+1',  # Канада
    'GB': '+44',  # Великобритания
    'DE': '+49',  # Германия
    'FR': '+33',  # Франция
    'IT': '+39',  # Италия
    'ES': '+34',  # Испания
    'JP': '+81',  # Япония
    'CN': '+86',  # Китай
    'IN': '+91',  # Индия
    'RU': '+7',  # Россия
    'BR': '+55',  # Бразилия
    'AU': '+61',  # Австралия
    'ZA': '+27',  # ЮАР
}


# Функция для получения телефонного кода страны
def get_country_phone_code(country_code):
    """
    Возвращает телефонный код страны по её ISO коду.
    Если код не найден, возвращает '+1' (код США) по умолчанию.
    """
    return COUNTRY_PHONE_CODES.get(country_code, '+1')
